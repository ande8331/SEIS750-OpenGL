<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- saved from url=(0153)https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments -->
<html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Assignments</title>
  
  <meta id="request-method" name="request-method" content="GET">
  <meta name="author" content="Blackboard">
  <meta name="copyright" content="Â© 1997-2012 Blackboard Inc. All Rights Reserved. U.S. Patent No. 7,493,396 and 7,558,853. Additional Patents Pending.">
  <meta name="keywords" content="Blackboard">
  <meta http-equiv="Pragma" content="no-cache">
  <meta http-equiv="Expires" content="-1">
  <link rel="SHORTCUT ICON" type="image/x-icon" href="https://blackboard.stthomas.edu/ui/bb-icon2.ico">
    <link rel="stylesheet" type="text/css" href="theme.css">
    <link rel="stylesheet" type="text/css" href="brand.css">
          <style type="text/css">

#courseMenuPalette div.navPaletteContent ul li a, #courseMenuPalette div.navPaletteContent ul li span
{
  color: #444444;
}

#courseMenuPalette ul.courseMenu li.divider hr
{
  background-color: #444444;
}

#courseMenuPalette ul.courseMenu li h4
{
  color: #444444;
}

#courseMenuPalette h4.treehead
{
  color: #444444;
}

#courseMenuPalette div.navPaletteContent
{
  background-color: #ededed;
}

#courseMenuPalette div.bottomRound b
{
  background-color: #ededed;
}


</style>
       <link rel="stylesheet" type="text/css" media="print" href="print.css">
    <script type="text/javascript" src="i18n.js"></script>
      <script language="javascript" type="text/javascript">

var JS_RESOURCES = new Object();

function _init_bundle_JS_RESOURCES() {

    JS_RESOURCES['validate.range.lessthen.str'] = 'Less Than {0}';
    JS_RESOURCES['notification.submit'] = 'Action already submitted.\nWait until the action is complete.';
    JS_RESOURCES['field_name.substitute'] = '\'\'{0}\'\' input field';
    JS_RESOURCES['validation.number'] = 'A valid numeric value must be entered: {0}.';
    JS_RESOURCES['confirm.remove_item'] = 'This action is final and cannot be undone. Continue?';
    JS_RESOURCES['validation.option.required'] = 'At least one option must be selected from the list.';
    JS_RESOURCES['validate.alignment.missing.content'] = 'You selected alignments but did not select any alignable content to copy.';
    JS_RESOURCES['validate.range.morethen.str'] = 'More Than {0}';
    JS_RESOURCES['validation.radio.required'] = 'Make a selection to continue.';
    JS_RESOURCES['validate.range.between.str'] = 'Between {0} and {1}';
    JS_RESOURCES['validation.negative'] = 'A valid non-negative value must be entered: {0}.';
    JS_RESOURCES['validation.password'] = 'Password cannot be empty or contain only spaces.';
    JS_RESOURCES['invalid_char.space'] = 'space';
    JS_RESOURCES['common.list.separator.comma'] = '{0}, {1}';
    JS_RESOURCES['validate.invalidate.number.space'] = 'Space';
    JS_RESOURCES['validation.date_past.confirm'] = 'The time is in the past.\nContinue with this time?';
    JS_RESOURCES['validation.date.required'] = 'A complete date value must be provided: {0}.';
    JS_RESOURCES['validation.invalid_chars'] = 'Contains illegal characters: {0}.\nDelete these characters: {1}';
    JS_RESOURCES['validation.mismatch'] = 'The values entered do not match: {0}.\nConfirm: {0}.';
    JS_RESOURCES['validate.login.invalid.username.or.pass'] = 'Enter a username and password.';
    JS_RESOURCES['validation.date_equal'] = 'The start date cannot be equal to the end date.';
    JS_RESOURCES['validation.valid_course_id'] = 'Course id contains illegal characters or multibyte characters.';
    JS_RESOURCES['validation.cmp_field.rejected'] = 'The {0} cannot be used without a corresponding {1} value.';
    JS_RESOURCES['validation.percent'] = 'A valid percent value between 0 and 100 must be entered.';
    JS_RESOURCES['validation.maximum_length.singular'] = 'Must not contain more than {1} characters: {0}.\nReduce the size of the input by one character.';
    JS_RESOURCES['validation.minimum_length'] = 'A minimum of {0} characters must be entered: {1}.';
    JS_RESOURCES['active.filter.free.form.text.blank'] = 'Specify a value for the search text field';
    JS_RESOURCES['validation.invalid_value'] = 'Invalid numeric value provided: {0}.';
    JS_RESOURCES['vtbe.artifact.footer.validate.nameIfSaveArtifact'] = 'Specify a Name in order to Save as a Reusable Object.';
    JS_RESOURCES['validation.multiSelect.minItems'] = 'Multiselect box should contain at least {0} number of items.';
    JS_RESOURCES['validation.multiSelect.maxItems'] = 'Multiselect box should not contain more than {0} number of items.';
    JS_RESOURCES['validate.enrolloptions.error.codeconflict'] = 'The Access Code Enrollment option conflicts with the selection of {instructor} Led enrollment.';
    JS_RESOURCES['validation.maximum_length.plural'] = 'Must not contain more than {1} characters: {0}.\nReduce the size of the input by {2} characters.';
    JS_RESOURCES['validate.enrolloptions.error.nooption'] = 'Warning: Choose either the {instructor} Led or the Self-Enrollment option.';
    JS_RESOURCES['validation.portal.tool.items.remove'] = 'Delete: {0}?';
    JS_RESOURCES['active.filter.search.terms'] = 'Search Terms';
    JS_RESOURCES['warning.email'] = 'Email address is a recommended field. Users will be unable to use parts of the system without an email address.';
    JS_RESOURCES['invalid_char.comma'] = 'comma';
    JS_RESOURCES['validation.plain_text.confirm'] = 'To display equations correctly in this document, Smart Text or HTML format must be selected.\nClick \'OK\' to save in selected Plain Text format or click \'Cancel\' to select a new format.';
    JS_RESOURCES['validation.date_past'] = 'The end date cannot be earlier than the start date.';
    JS_RESOURCES['validation.association.refresh.confirm'] = 'The associated items information might have been updated.\nClick \'OK\' to refresh the list or click \'Cancel\' to keep the current page.';
    JS_RESOURCES['validation.image_type'] = 'Unknown image type: {0}. Image may not display correctly.';
    JS_RESOURCES['validation.system_role.reserve'] = '"bb" is not permitted at the beginning of a role ID.';
    JS_RESOURCES['validation.email'] = 'A fully qualified email address (for example, info@blackboard.com) must be entered.';
    JS_RESOURCES['validation.maximum_length.no_name.singular'] = 'Must not contain more than {0} characters.\nReduce the size of the input by one character.';
    JS_RESOURCES['validate.invalidate.number'] = 'Please input valid number instead of {0}.';
    JS_RESOURCES['validation.required'] = 'A value must be provided: {0}.';
    JS_RESOURCES['list.checkToSelectAllItems'] = 'Check to select all items';
    JS_RESOURCES['validation.maximum_length.no_name.plural'] = 'Must not contain more than {0} characters.\nReduce the size of the input by {1} characters.';
    JS_RESOURCES['validation.url'] = 'A valid URL (for example, http://www.myschool.edu) must be entered.';
    JS_RESOURCES['validate.range.overlap'] = 'criteria ({0}) overlaps criteria ({1}).';
    JS_RESOURCES['hide.helptext'] = 'Hide Help Text';
    JS_RESOURCES['confirm.delete_item_value'] = 'This item {0} will be deleted. Continue?';
    JS_RESOURCES['assessment.incomplete.confirm'] = 'The following questions may be incomplete:\n {0}\nClick cancel to return to the test. Click Ok to submit assessment.';
    JS_RESOURCES['list.uncheckToDeselectAllItems'] = 'Uncheck to deselect all items';
    JS_RESOURCES['assessment.incomplete.confirm.backtrackProhibited'] = 'The following questions may be incomplete:\n {0}\nClick cancel to return to the test. Click Ok to save the incomplete answer.';
    JS_RESOURCES['validation.time.required'] = 'A complete time value must be provided: {0}.';
    JS_RESOURCES['vtbe.artifact.footer.validate.saveLocationIfSaveArtifact'] = 'Specify a location for the Reusable Object.';
    JS_RESOURCES['validation.cmp_field.required'] = 'A value must be provided for {0}\nwhen {1} field is not empty';
    JS_RESOURCES['validate.enrolloptions.error.emailrequestconflict'] = 'The selected email enrollment option conflicts with the self-enrollment selection.';
    JS_RESOURCES['active.filter.changed.alert'] = 'criteria now contains';
    JS_RESOURCES['show.helptext'] = 'Show Help Text';
    JS_RESOURCES['portalmodule.section.remove'] = 'Delete: {0}?';

    JS_RESOURCES.getString = i18n_get_string;
    JS_RESOURCES.getFormattedString = i18n_get_formatted_string;

}

_init_bundle_JS_RESOURCES();

</script>
<script language="javascript" type="text/javascript">

var LOCALE_SETTINGS = new Object();

function _init_bundle_LOCALE_SETTINGS() {

    LOCALE_SETTINGS['LOCALE_SETTINGS.FIRST_DAY_OF_WEEK.03207'] = '0';
    LOCALE_SETTINGS['LOCALE_SETTINGS.ADDRESS_ORDER.07832'] = 'street,city,region,postal_code,country';
    LOCALE_SETTINGS['BBI18N.WINDOWS_CHARSET'] = 'ISO-8859-1';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_PATH.03170'] = 'C:/WINNT/Fonts';
    LOCALE_SETTINGS['LOCALE_SETTINGS.YEAR_CHARACTER.03255'] = '';
    LOCALE_SETTINGS['LOCALE_SETTINGS.SHORT_SURNAME'] = '{3}, {1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.SHORT'] = '{1} {3}';
    LOCALE_SETTINGS['number_format.thousands_sep'] = ',';
    LOCALE_SETTINGS['float.allow.negative.format'] = '^[-]?[0-9]*(\\.[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.EXTENDED_SURNAME'] = '{3}';
    LOCALE_SETTINGS['number_format.exponent'] = 'eE';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN_ORDER'] = 'title,givenName,middleName,familyName,suffix,otherName';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_FULL.02098'] = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAYS.00521'] = '01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31';
    LOCALE_SETTINGS['LOCALE_SETTINGS.WORK_FIELD_ORDER'] = 'JOB_TITLE DEPARTMENT COMPANY B_PHONE_1 B_PHONE_2 B_FAX';
    LOCALE_SETTINGS['LOCALE_SETTINGS.internal_date_format'] = 'MM/dd/yy';
    LOCALE_SETTINGS['LOCALE_SETTINGS.date_display_pattern'] = 'MM/DD/YY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.TIME_ORDER.00519'] = 'HMP';
    LOCALE_SETTINGS['number_format.decimal_point'] = '.';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN.1'] = '{0}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN.2'] = '{1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.GIVEN_INITIAL_FAMILY_NAME'] = '{4} {3}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.PHONE_FIELD_ORDER'] = 'H_PHONE_1 H_PHONE_2 H_FAX M_PHONE';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_SIZE.03168'] = '8';
    LOCALE_SETTINGS['BBI18N.SOLARIS_CHARSET'] = 'ISO8859-1';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_SHORT.00520'] = 'Jan Feb  Mar Apr  May Jun Jul Aug Sep Oct Nov Dec';
    LOCALE_SETTINGS['LOCALE_SETTINGS.AM_PM.00522'] = 'AM PM';
    LOCALE_SETTINGS['float.format'] = '^[0-9]*(\\.[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.SORT_COLUMN'] = 'familyName';
    LOCALE_SETTINGS['efloat.format'] = '^[+-]?[0-9]*(\\.[0-9]+)?([eE][+-]?[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_FULL.02100'] = 'January February March April May June July August September October November December';
    LOCALE_SETTINGS['LOCALE_SETTINGS.GREETING'] = 'Welcome, {1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_SHORT.02097'] = 'SUN MON TUE WED THU FRI SAT';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DATE_ORDER.00519'] = 'MDY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.LONG'] = '{0} {1} {2} {3}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.ADDRESS_FIELD_ORDER'] = 'STREET_1 STREET_2 CITY STATE ZIP_CODE COUNTRY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.24HR_SUPPORT.03208'] = '0';
    LOCALE_SETTINGS['BBI18N.LINUX_CHARSET'] = 'iso88591';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_CHARACTER.03254'] = '';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_NAME.03169'] = 'ARIAL.TTF';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_CHARACTER.03253'] = '';

    LOCALE_SETTINGS.getString = i18n_get_string;
    LOCALE_SETTINGS.getFormattedString = i18n_get_formatted_string;

}

_init_bundle_LOCALE_SETTINGS();

</script>

      <script language="javascript" type="text/javascript">

var LOCALE_SETTINGS = new Object();

function _init_bundle_LOCALE_SETTINGS() {

    LOCALE_SETTINGS['LOCALE_SETTINGS.FIRST_DAY_OF_WEEK.03207'] = '0';
    LOCALE_SETTINGS['LOCALE_SETTINGS.ADDRESS_ORDER.07832'] = 'street,city,region,postal_code,country';
    LOCALE_SETTINGS['BBI18N.WINDOWS_CHARSET'] = 'ISO-8859-1';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_PATH.03170'] = 'C:/WINNT/Fonts';
    LOCALE_SETTINGS['LOCALE_SETTINGS.YEAR_CHARACTER.03255'] = '';
    LOCALE_SETTINGS['LOCALE_SETTINGS.SHORT_SURNAME'] = '{3}, {1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.SHORT'] = '{1} {3}';
    LOCALE_SETTINGS['number_format.thousands_sep'] = ',';
    LOCALE_SETTINGS['float.allow.negative.format'] = '^[-]?[0-9]*(\\.[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.EXTENDED_SURNAME'] = '{3}';
    LOCALE_SETTINGS['number_format.exponent'] = 'eE';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN_ORDER'] = 'title,givenName,middleName,familyName,suffix,otherName';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_FULL.02098'] = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAYS.00521'] = '01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31';
    LOCALE_SETTINGS['LOCALE_SETTINGS.WORK_FIELD_ORDER'] = 'JOB_TITLE DEPARTMENT COMPANY B_PHONE_1 B_PHONE_2 B_FAX';
    LOCALE_SETTINGS['LOCALE_SETTINGS.internal_date_format'] = 'MM/dd/yy';
    LOCALE_SETTINGS['LOCALE_SETTINGS.date_display_pattern'] = 'MM/DD/YY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.TIME_ORDER.00519'] = 'HMP';
    LOCALE_SETTINGS['number_format.decimal_point'] = '.';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN.1'] = '{0}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.COLUMN.2'] = '{1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.GIVEN_INITIAL_FAMILY_NAME'] = '{4} {3}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.PHONE_FIELD_ORDER'] = 'H_PHONE_1 H_PHONE_2 H_FAX M_PHONE';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_SIZE.03168'] = '8';
    LOCALE_SETTINGS['BBI18N.SOLARIS_CHARSET'] = 'ISO8859-1';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_SHORT.00520'] = 'Jan Feb  Mar Apr  May Jun Jul Aug Sep Oct Nov Dec';
    LOCALE_SETTINGS['LOCALE_SETTINGS.AM_PM.00522'] = 'AM PM';
    LOCALE_SETTINGS['float.format'] = '^[0-9]*(\\.[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.NAME.SORT_COLUMN'] = 'familyName';
    LOCALE_SETTINGS['efloat.format'] = '^[+-]?[0-9]*(\\.[0-9]+)?([eE][+-]?[0-9]+)?$';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_FULL.02100'] = 'January February March April May June July August September October November December';
    LOCALE_SETTINGS['LOCALE_SETTINGS.GREETING'] = 'Welcome, {1}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_SHORT.02097'] = 'SUN MON TUE WED THU FRI SAT';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DATE_ORDER.00519'] = 'MDY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.LONG'] = '{0} {1} {2} {3}';
    LOCALE_SETTINGS['LOCALE_SETTINGS.ADDRESS_FIELD_ORDER'] = 'STREET_1 STREET_2 CITY STATE ZIP_CODE COUNTRY';
    LOCALE_SETTINGS['LOCALE_SETTINGS.24HR_SUPPORT.03208'] = '0';
    LOCALE_SETTINGS['BBI18N.LINUX_CHARSET'] = 'iso88591';
    LOCALE_SETTINGS['LOCALE_SETTINGS.MONTH_CHARACTER.03254'] = '';
    LOCALE_SETTINGS['LOCALE_SETTINGS.REPORT_FONT_NAME.03169'] = 'ARIAL.TTF';
    LOCALE_SETTINGS['LOCALE_SETTINGS.DAY_CHARACTER.03253'] = '';

    LOCALE_SETTINGS.getString = i18n_get_string;
    LOCALE_SETTINGS.getFormattedString = i18n_get_formatted_string;

}

_init_bundle_LOCALE_SETTINGS();

</script>

         <script type="text/javascript" src="prototype.js"></script>
    <script type="text/javascript" src="fastinit.js"></script>
    <script type="text/javascript" src="page.js"></script>
    <script type="text/javascript" src="validateForm.js"></script>
    <script type="text/javascript" src="numberLocalizer.js"></script>
    <script type="text/javascript" src="accessibleSelect.js"></script>
    <script type="text/javascript" src="popup.js"></script>
    <script type="text/javascript" src="titlebartagutils.js"></script>
    <script type="text/javascript" src="inventoryList.js"></script>
    <script type="text/javascript" src="UserPageInstructionsSettingDWRFacade.js"></script>
    <script type="text/javascript" src="engine.js"></script>
    <script type="text/javascript" src="tree.js"></script>
    <script type="text/javascript" src="coursemenu.js"></script>
    <script type="text/javascript" src="UserDataDWRFacade.js"></script>
    <script type="text/javascript" src="CourseMenuDWRFacade.js"></script>
    <script type="text/javascript" src="util.js"></script>
    <script type="text/javascript" src="browserSpecificBehavior.js"></script>
    </head>
  <body>
  
<h2 class="hideoff">
 Current Location
</h2>

<div id="breadcrumbs" class="breadcrumbs ">
 <div class="topRound"><b class="outer"></b><b class="middle"></b><b class="inner"></b></div>
 <div class="path  noToggle" role="wairole:breadcrumbs">
 <ol class="clearfix">
    	<li class="root"> <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/courseMain?course_id=_77664_1" target="content"><span class="courseName">Computer Graphics Programming</span> <span class="courseId">201220SEIS750-01</span></a>        </li>
   	<li class="placeholder"> Assignments        </li>
  </ol>
 </div>


<div id="helpTextToggle" class="helpLink hidden">
  
</div>
 <input type="hidden" name="showHelperSetting" id="showHelperSetting" value="">
 <div class="bottomRound"><b class="inner"></b><b class="middle"></b><b class="outer"></b></div>
</div>

<div class="locationPane">
 <div id="navigationPane" class="navigationPane " style="height: 9022px; ">
 <div id="puller">
  <a id="menuPuller" class="clickpuller" title="Hide Course Menu" href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#">
   <img id="expander" alt="Hide Course Menu" src="spacer.gif">
  </a>
 </div>
 <div id="menuWrap" class="menuWrap">
<div class="menuWrap-inner">
  
<!-- add old style nonce Id to the page, since there is no way to use the nonceId attribute as part of the bbNG:form tag-->
<input type="hidden" name="blackboard.platform.security.NonceUtil.nonce" value="f20653c8-cff5-437e-b779-42b765b3e965">



<div id="courseMenuPalette" class="navPalette listCm  navPaletteExpCol">  
 <div class="topRound">
  <b class="outer"></b><b class="middle"></b><b class="inner"></b>
 </div>  
  <div class="actionBarMicro clearfix">
  <h2 class="hideoff">Menu Management Options</h2>
      <ul class="nav clearfix u_floatThis-right">
   <li id="refreshMenuLink" class="secondaryButton  ">
 <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" title="Refresh"><img src="small_refresh.gif" alt="Refresh"></a>

</li><li id="courseMapButton" class="secondaryButton  ">
 <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" title="Display Course Menu in a Window"><img src="small_new_window.gif" alt="Display Course Menu in a Window"></a>

</li><li id="detailViewLink" class="secondaryButton  ">
 <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" title="Folder View"><img src="small_detail_view.gif" alt="Folder View"></a>

</li><li id="detailViewLink2" class="secondaryButton  sub" style="display: none; ">
 <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" title="Folder View (Click to see options)" id="cmlink_79a5b5fc94344bc89fb521737378d14b" class="options"><img src="small_detail_view.gif" alt="Folder View (Click to see options)"></a>
 <ul id="cmul0_79a5b5fc94344bc89fb521737378d14b">
     <li><a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" id="expandAllLink">Expand All</a></li>
     <li><a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" id="collapseAllLink">Collapse All</a></li>
   </ul>

</li><li id="quickViewLink" class="secondaryButton active ">
 <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" title="List View"><img src="small_quick_view.gif" alt="List View"></a>

</li>
  </ul>
   </div>
  <div class="navPaletteContent">
          <h2 class="hideoff">Course Menu:</h2>
         <div id="courseMenuPalette_paletteTitleHeading">
    <div class="navPaletteTitle">
              <h3>
      <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184582_1&mode=reset&courseTocLabel=Assignments#" class="comboLink" title="Collapse Computer Graphics Programming (201220SEIS750-01)" id="courseMenu_link"><img src="generic_collapse.gif" class="hideoff" alt="Collapse">Computer Graphics Programming (201220SEIS750-01)</a>
     </h3>
     <h3>
      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/courseMain?course_id=_77664_1" target="content" class="submenuLink" id="courseMenu_combo" title="Go to Course Entry Page"><img src="generic_dbl_arrow_right.gif" alt="Course Entry Page"></a>
     </h3>
        </div>
   </div>                               
    <ul id="courseMenuPalette_contents" class="courseMenu">
   <li id="paletteItem:_280799_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/launchLink.jsp?course_id=_77664_1&tool_id=_132_1&tool_type=TOOL&mode=view&mode=reset&courseTocLabel=Announcements" target="_self"><span title="Announcements">Announcements</span></a>
       </li><li id="paletteItem:_280801_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/launchLink.jsp?course_id=_77664_1&tool_id=_11_1&tool_type=TOOL&mode=view&mode=reset&courseTocLabel=Tools" target="_self"><span title="Tools">Tools</span></a>
       </li><li id="paletteItem:_280800_1" class="clearfix divider"> <hr>
     </li><li id="paletteItem:_280798_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/launchLink.jsp?course_id=_77664_1&tool_id=_196_1&tool_type=TOOL&mode=view&mode=reset&courseTocLabel=COURSE_DEFAULT.Help.APPLICATION.label" target="_new"><span title="Help">Help</span></a>
       </li><li id="paletteItem:_289957_1" class="clearfix "> <a href="listContent.htm" target="_self"><span title="Assignments">Assignments</span></a>
       </li><li id="paletteItem:_289958_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184583_1&mode=reset&courseTocLabel=Lectures" target="_self"><span title="Lectures">Lectures</span></a>
       </li><li id="paletteItem:_289959_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1184584_1&mode=reset&courseTocLabel=Course+Survey" target="_self"><span title="Course Survey">Course Survey</span></a>
       </li><li id="paletteItem:_292630_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1202169_1&mode=reset&courseTocLabel=Syllabus" target="_self"><span title="Syllabus">Syllabus</span></a>
       </li><li id="paletteItem:_292976_1" class="clearfix "> <a href="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?course_id=_77664_1&content_id=_1203968_1&mode=reset&courseTocLabel=Code" target="_self"><span title="Code">Code</span></a>
       </li>
  </ul>
 <div id="courseMenu_folderView" style="display: none;" class="treeContainer"></div></div>
 <div class="bottomRound">
   <b class="inner"></b><b class="middle"></b><b class="outer"></b>
 </div>
</div>


  </div>
 </div>
 </div>
 <div id="contentPanel" class="contentPane  " style="height: 9022px; ">
<div class="shadow">
     <div id="editmodeWrapper"> 
 
  <div class="topRound">
   <b class="outer"></b><b class="middle"></b><b class="inner"></b>
  </div>
  <div id="content" class="contentBox ">
   
<div id="pageTitleDiv" class="pageTitle clearfix">
 
  
<div id="pageTitleBar" class="pageTitleIcon">
  <img src="folder_on.gif" alt="" id="titleicon"><h1><span id="pageTitleText">
  <span style="color:#000000;">Assignments</span>  </span></h1>
    <span id="_titlebarExtraContent" class="titleButtons"></span>
</div>


<form name="contentForm" action="https://blackboard.stthomas.edu/webapps/blackboard/content/listContent.jsp?content_id=_1184582_1&course_id=_77664_1" method="POST">
    <div><!-- inline elements cannot be listed directly in a form. (it's invalid html) -->
      <input type="hidden" name="rstatus" value="">
      <input type="hidden" name="reviewed_content_id" value="">
      <input type="hidden" name="action" value="">
    </div>
  </form>

  
</div>

      <div class="container clearfix" id="containerdiv">
    <h2 class="hideoff">Content</h2>
    

<!-- remember whether this list is paged -->
<input type="hidden" name="isPaged" value="false">

<!-- begin edit paging (top) --> 
  <!-- end top paging edit -->



<!-- Begin top list actionbar /paging area -->
 
<ul id="content_listContainer" class="contentList">



<li id="contentListItem:_1191781_1" class="clearfix read">

<img alt="" src="document_on.gif" class="item_icon">

<div class="item clearfix" id="_1191781_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>



     <span style="color:#000000;">Homework Submission Guidelines</span>
 </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated"><ul> <li>Your code should be well organized and neatly formatted</li> <li>Your code should be heavily commented</li> <li style="list-style: none"> <ul> <li>If I have to work too hard to figure out what your code is doing, I'll start deducting points.</li> </ul> </li> </ul> <ul> <li>Upload any source files (.cpp, .h and .glsl) along with any data files that were not provided as part of the assignment</li> <li style="list-style: none"> <ul> <li><b>Please do not submit your entire project directory, or any binaries, or any data files that were given to you as part of the project.</b> If you submit the full project directory, that will often times be &gt;100MB per submission instead of a few KB for just the source files.</li> </ul> </li> </ul> <ul> <li>Although you may develop your code on the machine of your choice, your code must compile and run on the machines in OSS338 with no modifications or errors. If I have to alter your code to get it to work on the standard machine, you will lose points.</li> </ul></div>
</div>

 <div id="_1191781_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1191782_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1191782_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1191782_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 0</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated">Step 1: Go locate the source code for our textbook:<p><a onclick="this.href=&#39;/webapps/portal/frameset.jsp?tabGroup=courses&amp;url=%2Fwebapps%2Fblackboard%2Fcontent%2FcontentWrapper.jsp%3Fcontent_id%3D_1191782_1%26displayName%3DLinked%2BFile%26course_id%3D_77664_1%26navItem%3Dcontent%26attachment%3Dtrue%26href%3Dhttp%253A%252F%252Fwww.cs.unm.edu%252F%257Eangel%252FBOOK%252FINTERACTIVE_COMPUTER_GRAPHICS%252FSIXTH_EDITION%252F&#39;;" href="http://www.cs.unm.edu/~angel/BOOK/INTERACTIVE_COMPUTER_GRAPHICS/SIXTH_EDITION/">http://www.cs.unm.edu/~angel/BOOK/INTERACTIVE_COMPUTER_GRAPHICS/SIXTH_EDITION/</a><br><br>Step 2: If you plan on using your own machine rather than the lab machines, follow the installation procedure found below<br><br>Step 3: Create a Visual C/C++ project&nbsp;<span style="font-weight: bold; ">(type: Empty Project)</span><br><br>Step 4: Copy the code for Chapter 2 Example 1 into your new project</p><ul><li>example1.cpp</li><li>Common/InitShader.cpp</li><li>fshader21.glsl</li><li>vshader21.glsl</li><li><span style="font-weight: bold; ">WARNING:</span>&nbsp;If you drag and drop these files from windows explorer to your visual studio solution explorer, or if you copy and paste the&nbsp;<span style="font-style: italic; "><span style="text-decoration: underline; ">files</span></span>, you will create short-cuts rather than actually copying the files to the appropriate directory. Make sure you actually copy the files or create new files and copy and paste the text into those. Otherwise at some point you'll go crazy trying to figure out why you can't find your source files to submit for grading.</li></ul>Step 5: Alter the code as needed (see hints below)&nbsp;to get it to compile and run.<br><br>Step 6: Alter the code to make the window title show your name, run the program and take a screenshot.<br><br>Step 7: Submit a zip file with your source files (*.h, *.cpp, *.glsl) and the screenshot of your program running.&nbsp;<div><b>Installation procedures:</b></div><div><ul><li>To obtain a free copy of Visual Studio for your own machine, contact Tim Fremouw (TEFREMOUW@stthomas.edu)</li><li>To install freeglut,&nbsp;</li><li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "><ul><li>Go to&nbsp;<a onclick="this.href=&#39;/webapps/portal/frameset.jsp?tabGroup=courses&amp;url=%2Fwebapps%2Fblackboard%2Fcontent%2FcontentWrapper.jsp%3Fcontent_id%3D_1191782_1%26displayName%3DLinked%2BFile%26course_id%3D_77664_1%26navItem%3Dcontent%26attachment%3Dtrue%26href%3Dhttp%253A%252F%252Ffreeglut.sourceforge.net%252F&#39;;" href="http://freeglut.sourceforge.net/">http://freeglut.sourceforge.net/</a>&nbsp;and grab the latest source code</li><li>Compile freeglut according to the instructions for your OS and compiler of choice (remember to target 32-bit binaries even if you are on a 64-bit machine)</li></ul></li><li>To install GLEW</li><li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "><ul><li>Grab the official windows binaries (or source code if you wish to compile for a different platform) from&nbsp;<a onclick="this.href=&#39;/webapps/portal/frameset.jsp?tabGroup=courses&amp;url=%2Fwebapps%2Fblackboard%2Fcontent%2FcontentWrapper.jsp%3Fcontent_id%3D_1191782_1%26displayName%3DLinked%2BFile%26course_id%3D_77664_1%26navItem%3Dcontent%26attachment%3Dtrue%26href%3Dhttp%253A%252F%252Fglew.sourceforge.net%252F&#39;;" href="http://glew.sourceforge.net/">http://glew.sourceforge.net/</a>&nbsp; (again, make sure you go for the 32-bit binaries)</li></ul></li><li>Copying files to the appropriate locations</li><li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "><ul><li>After you have either obtained binaries or compiled them yourself, you'll need to copy files to three locations to get visual studio to work properly (if you're using a different compiler, find the equivalent locations)</li><li>header file (.h) should be copied to [visual studio]/VC/include/GL/</li><li>.lib files should be copied to [visual studio]/VC/lib/</li><li>.dll files should be copied to /windows/System32 if you have a 32-bit OS, and /windows/SysWow64 if you have a 64-bit OS</li></ul></li></ul></div><div><b>Getting code to compile in Visual Studio</b></div><div><ul><li>Make sure all the proper header files are located in /include/GL. &nbsp;The full list is&nbsp;</li><li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "><ul><li>freeglut.h,&nbsp;freeglut.h,&nbsp;freeglut_ext.h,&nbsp;freeglut_std.h,, glew.h,&nbsp;glext.h,&nbsp;glut.h,&nbsp;glxew.h,&nbsp;wglew.h</li><li>And from your textbook (download from Angel's website) Angel.h, mat.h, vec.h, CheckError.h</li></ul></li><li>Make sure you have a corrected version of InitShader.cpp (located in the /common/ directory of Angel's code) in your project code directory</li><li>Chances are VS 10 will have linker issues with glew. &nbsp;To work around these, add the following line after your include statements:<br><br>#pragma comment(lib, "glew32.lib")<br><br>and the following line needs to appear&nbsp;<u style="font-style: italic; ">before</u>&nbsp;your glueInit() call:<br><br>glewExperimental = GL_TRUE;<br>glewInit();</li></ul></div></div>
</div>

 <div id="_1191782_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1209820_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1209820_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1209820_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 1</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated">Your assignment is to create an interactive 2D target shooting game<br>   <br>   <span style="font-weight: bold; ">This is the only homework assignment for the semester where you are allowed to use OpenGL 1.* code and coding conventions.</span> <br>   <br>   OpenGL components you are expected to use:<br>   <br>    <ul> <li>Mouse and Keyboard listeners (to move the cross hairs)</li> <li>Rendering primatives (for the targets and cross hairs)</li> <li>OpenGL Fonts (to communicate with the user)</li> </ul> <br>   <br>   What your program should do:<br>   You should draw some targets (shape of your choice) and a crosshair on the screen. <br>   <br>   Your program should accept the following keyboard inputs:<br>   <br>    <ul> <li>F2 should start a new game</li> <li>space bar should fire a shot at the current crosshairs location</li> <li>'m' key should start or stop target motion</li> </ul> <br>   <br>   Your program should also accept the following mouse inputs:<br>   <br>    <ul> <li>The mouse should move the crosshairs around the screen</li> <li>A left click should fire a shot at the current crosshair location</li> </ul> <br>   Your program should behave as follows:<br>   <br>    <ul> <li>For each frame, you should draw any unhit targets plus a crosshair showing where the user is currently pointing</li> <li>If the targets are currently in motion, they should move around the screen in initially random directions, but should move along predictable paths, bouncing off the sides of the screen to keep them visible at all times</li> <li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "> <ul> <li>Note: If your targets don't bounce off of the edges of the window, you will lose points, even if you claim it's an intentional feature.</li> </ul> </li> <li>After a target is hit, you should stop drawing it for the rest of the game</li> <li>When all targets have been hit, inform the user that they are done using appropriate text functions</li> </ul> <br>   <br>   Grading Criteria:<br>   35 pts: Correct rendering of game elements including messages to player<br>   35 pts: Correct handling of mouse and keyboard input<br>   15 pts: Correct game mechanics<br>   15 pts: Good coding style and design<br>   <br>   Things to watch out for:<br>   <br>    <ul> <li>Make sure you use the reshape function to maintain the right sized window. Update your game space appropriately when the window size changes</li> <li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "> <ul> <li>Note that freeglut has no convenient way to prevent window resizing</li><li>We'll cover this in greater depth in upcoming weeks, but if you want your OpenGL coordinates to match your window pixel coordinates 1-to-1, you'll need to use the following lines in your reshape function to handle new window sizes:</li></ul></li></ul><blockquote style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 40px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-width: initial; border-color: initial; border-image: initial; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; "><blockquote style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 40px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-width: initial; border-color: initial; border-image: initial; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; "><blockquote style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 40px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-width: initial; border-color: initial; border-image: initial; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; ">glMatrixMode(GL_PROJECTION);<br>glLoadIdentity();<br>glOrtho(0.0, w, 0.0, h, -1.0, 1.0);</blockquote><blockquote style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 40px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-width: initial; border-color: initial; border-image: initial; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; ">glViewport(0,0,w,h);</blockquote></blockquote></blockquote><ul> <li>Make sure your game doesn't run so fast that the player can't hit the targets.</li> </ul> <br>   Suggested Order for Development<br>   <br>    <ul> <li>Start by just displaying a blank window</li> <li>Next, render several stationary targets scattered about the screen (you can use the rand() function to generate random screen locations)</li> <li>Next, implement the mouse functions for moving the crosshairs and firing</li> <li>Next, implement the keyboard functions for new game and firing</li> <li>Then implement moving targets (Covered in week 3's lecture)</li> <li>Finally, implement text drawing to display the "You won" message (covered in week 3's lecture)</li> </ul> <br>   We will be covering some of this material in lecture next week, so you might not be able to complete the whole assignment right away. However, don't leave this until we've covered 100% of the material, because that would leave you only half of the time to do the whole assignment.<br>  <div><b>PLEASE DO NOT SUBMIT YOUR ENTIRE PROJECT DIRECTORY.</b> Just source files (.cpp, .h, .glsl) please.</div></div>
</div>

 <div id="_1209820_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1218281_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1218281_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1218281_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 2</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated">Assignment 2: Out for a Drive <p><br>  Due: March 6<br>  <br>  Your assignment is to make a little 3D car that drives around a stage and is viewed from a eleveated camera position.<br>  <br style="font-weight: bold; ">  <span style="font-weight: bold; ">OpenGL components you are expected to use:</span><br>  </p> <ul> <li>Keyboard listeners</li> <li>Rendering primatives</li> <li>Model Transformations</li> </ul> <span style="font-weight: bold; ">What your program should do:</span><br>  You should draw a little car with a body and four wheels sitting on a stage. A person's head should be sticking out of the sunroof of the car and should have two eyes and what ever other facial features you want. Your car's wheels should have spokes or lugnuts or some other feature so that it is clear when your wheels are spinning and when they are stationary.<br>  <br>  Your car's driver should be capable of turning their head left and right, the car's front wheels should be capable of steering left or right, and your car should be able to drive forward and backward (in the direction the front wheels are pointed). &nbsp;When the car is moving forward or backward, the wheels should spin in the appropriate direction. &nbsp;When the car is stationary, the wheels should not spin.<br>  <br>  Your car should stop driving automatically when it hits the edge of the stage.<br>  <br>  <span style="font-weight: bold; ">Your program should accept the following keyboard inputs:</span><br>  <br>  <ul> <li>The space bar should stop your car from driving</li> <li>The up and down arrow keys should make the car drive forward and backward respectively. &nbsp;Once the car is in motion, it should remain in motion until something stops it (hitting the edge of the stage, or another button press). &nbsp;You should not have to keep the key held down to keep the car in motion.</li> <li>The left and right arrow keys should make your car steer left and right (not as a binary decision, but by progressively turning the front wheels)</li> <li>The 'z' and 'x' keys should make your person's head rotate left and right</li> </ul> <span style="font-weight: bold; ">Other requirements:</span><br>  <ul> <li>You should make each of the four sides of your car a different color for easy identification</li> <li>You should have eyes on your person's head so you can tell what direction they are looking</li> <li>You should have a large enough stage for your car to be able to drive and steer around a bit before hitting the edge.</li> </ul> <span style="font-weight: bold; ">General Tips:</span><br>  <br>  <ul> <li>You may make use of Angel's matrix stack code if you wish. You can find it in Section 8.4.1, or just download it as part of the transformation code that we used in our in-class exercise.</li> <li>Since we won't talk about viewing until quite late into this project, you'll probably just want to make use of the viewing code from our in class exercise. &nbsp;You'll want to keep all of your vertex coordinates between, say, -50 and 50 and you should be OK.&nbsp;</li> <li style="list-style-type: none; list-style-position: initial; list-style-image: initial; "> <ul> <li>Project 3 will add better camera and viewing controls.</li> </ul> </li> <li>Angel has helpfully provided a LookAt() function to help you get your camera positioned and pointed in the right place.</li> </ul> <br>  <span style="font-weight: bold; ">Grading Criteria:</span><br>  30 pts: Correct rendering of all car, head parts and stage<br>  35 pts: Correct transformations<br>  10 pts: Correct handling of keyboard input<br>  15 pts: Correct car behavior (stop at edge of stage, roll wheels, etc)<br>  10 pts: Good coding style and design<br>  <br>  <span style="font-weight: bold; ">Things to watch out for:</span><br>  <br>  <ul> <li>You must use OpenGL 3.2+ code, including shaders and Buffer Objects. Your shaders will be quite simple for this assignment, but we will be extending this project in the future</li> <li>Make sure you have your transformation heirarchy set up correctly. Failure to do so will cause incorrect movements</li> <li>Your heirarchy for your car is</li> </ul> <br>   front wheels - spokes<br>   /<br>  car body- head - eyes<br>   \<br>   back wheels - spokes<br>  <br>  Thus, anything that happens to the car body also happens to the head, and therefore the eyes, but things that happen to the head should not affect the car body.<br>  <br>  <br>  <span style="font-weight: bold; ">Suggested Order for Development</span><br>  <br>   1. Start by drawing the stage with a stationary camera showing the whole stage<br>   2. Next, render the car sitting on the stage with head and wheels<br>   3. Next, implement rotating in place for the car wheels and head<br>   4. Next, implement wheel rolling<br>   5. Next, implement actual driving<br>   6. Finally, implement correct behavior as described above<br>  <br>  <br>  You have a full two weeks to complete the assignment, so try to get as far as you can during the first week so you can ask questions when you get stuck</div>
</div>

 <div id="_1218281_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1222681_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1222681_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1222681_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 3</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated">This assignment builds upon Assignment 2 by adding camera work to 
the car. All behavior and controls from Assignment 2 should carry over. 
Correct any problems indicated in your Assignment 2 feedback. &nbsp;If your Assignment 2 is simply not appropriate to use as the basis for Assignment 3, contact the professor ASAP for a solution to Assignment 2.<br><br>OpenGL components you are expected to use:<br>-Keyboard listeners<br>-Rendering primatives<br>-Model/camera Transformations<br>-Projection Transformations<br><br>What your program should do:<br>Your
 program should support 3 cameras: a static camera, a viewpoint camera 
and a "chase" camera. All three cameras should use Perspective()<br><br><ul><li>The 'c' key should switch between the static camera, the viewpoint camera, and the chase camera, then back to the static camera</li></ul><br>The
 static camera should be located in front of the stage, and initially 
pointed at the center of the stage. It should allow the following 
controls:<br>
<ul>
  <li>The 'a' key should zoom in (a 'lens' zoom where the camera location doesn't change)</li>
  <li>The 's' key should zoom out (a 'lens' zoom)</li>
  <li>The 'q' key should 'dolly' in (moving the actual camera location)</li>
  <li>The 'w' key should 'dolly' out</li>
  <li>The 'f' key should toggle back and forth between pointing the 
camera at the center of the stage and pointing the camera at the car.</li>
  <li>The 'r' key should reset the camera back to the static camera with default parameters</li>
  <li>If you switch to one of the other cameras, when you switch back to the static camera all of your settings should still be there</li>
</ul><br>The viewpoint camera should provide a view through the eyes of the car's driver. <br>
<ul>
  <li>You might want to actually move the camera just a little bit in 
front of the driver's head to avoid accidentally showing the inside of 
an eyeball or something. Alternately, make sure your near clip plane is 
far enough out to avoid this issue (but not so far out that you can't 
see objects that are close to your camera)</li>
  <li>This camera should be pointed where ever the driver's head is pointed</li>
  <li>This camera should be unaffected by the static camera's controls above (other than the reset key 'r')</li>
</ul><br>The "chase" camera should provide an over-the-shoulder view from a fixed position behind and above the car.<br>
<ul>
  <li>The chase camera should point in the direction that the front of the car is pointing.</li>
  <li>The chase camera should not be affected by head turning</li>
  <li>This camera should be unaffected by the static camera's controls listed above.</li>
</ul><br>You should also put some simple objects around your stage for 
visual references as the car and cameras move about. You may need to 
make your stage a little bigger than before to give yourself room to 
drive around between these objects.<br><br>Grading Criteria:<br>30 pts: Correct static camera controls and behavior<br>10 pts: Correctly pointing at the car from static camera<br>20 pts: Correct viewpoint camera behavior<br>20 pts: Correct chase camera behavior<br>5 pts: Visual design and modeling<br>15 pts: Good coding style and design<br><br>Things to watch out for:<br>-Make sure that the viewpoint camera correctly reflects head movements as well as car movements<br>-Make sure that the chase camera follows the car as it moves<br>-Make sure you keep your cameras independent of each other<br>-Make
 sure you set your far clipping plane far enough away to view everything
 you need to see, but don't set it out so far that your depth resolution
 suffers<br>-Similarly, don't set your near plane too close<br>-Make sure all of these features are easily observable by the grader (don't be too subtle)<br>-LookAt()
 controls camera position and orientation and belongs to the modelview 
matrix, but your Perspective Projection matrix is like changing the lens
 of your camera. Make sure you are using each matrix appropriately<br><br>Suggested Order for Development<br>-You should already have the static camera pointed at the center of the stage working from Assignment 2<br>-Implement zooming<br>-Implement 'dolly' movements<br>-Implement following from the static location<br>-Implement the chase camera<br>-Implement the viewpoint camera<br><br><br>Once
 you get the hang of camera and projection concepts, this should flow 
pretty easily, but you only have one week for this assignment so don't 
procrastinate.<br><br></div>
</div>

 <div id="_1222681_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1227182_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1227182_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1227182_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 4</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated"><span style="font-weight: bold; text-decoration: underline; ">Assignment 4: "UST Noire"</span><br>  <br>  This assignment will add lighting to our ongoing car project. If you don't have a working assignment 3 solution, contact the professor ASAP<br>  <br>  <span style="font-weight: bold; text-decoration: underline; ">Goals:</span><br style="font-weight: bold; text-decoration: underline; ">  <br>  This assignment will demonstrate OpenGL lighting and shading, including Blinn-Phong lighting, <u>Phong shading</u>, and spotlights. You will also get some practice with GLSL attributes and uniforms.<br>  <br>  <span style="font-weight: bold; text-decoration: underline; ">Lights:</span><br>  <br>  You should have some low level of ambient light. It's night time, but not a moonless night.<br>  <br>  You should implement two headlights for your car. They should be located on the front of your car and should be pointed forward and slightly down (so they illuminate the ground in front of your car). Don't point them down too much since the driver needs to see where they are going. These lights should be spotlights with cutoffs of about 20 degrees or so (see page 264 of the Angel book, but be aware that the Red book (and probably most internet tutorials) only contains information on OpenGL 1 spotlights, which is not terribly useful for this assignment).<br>  <br>  You should also implement two police car lights, one red and one blue. These lights should be on the top of the car behind the driver's head and should be pointed in opposite directions (so if the red light is shining to the front, the blue light should be shining to the rear). Make the red and blue lights spin around so they point in different horizontal directions. These will still be point spot lights, not directional lights, but they can have a much wider angle.<br>  <br>  Optionally, you could also put the moon into the scene as a 5th light source and make it a true directional light.<br>  <br>  <span style="font-weight: bold; text-decoration: underline; ">Controls:</span><br>  <br>  All controls from Assignment 3 should still work.<br>  <br>  The 'L' key should turn your cop car lights on and off. &nbsp;(headlights should always be on)<br>  <br>  <br>  <span style="font-weight: bold; text-decoration: underline; ">Grading Criteria:</span><br>  <br>  15 pts: Correct modeling of all objects (particularly normal vectors and material properties)<br>  20 pts: Correct implementation of Blinn-Phong lighting (code could be spread between your vertex and fragment shaders, but note requirement of Phong Shading)<br>  20 pts: Correct implementation of Phong Shading (all pixels must be colored well)<br>  15 pts: Correct implementation of headlights<br>  15 pts: Correct implementation of cop car lights<br>  5 pts: Correct implementation of controls<br>  10 pts: Good design and coding style<br>  <br>  <span style="font-weight: bold; text-decoration: underline; ">Additional Notes:</span><br>  <br>  Watch out for vectors that aren't normalized! Remember that certain operations (such as the automatic linear interpolation that takes place between your vertex and fragment shaders) will un-normalize previously normalized vectors<br>  <br>  Since your headlights will be located pretty close to the stage surface, the Light vectors calculated at your stage vertices will not be easily interpolated without rounding errors. Instead, you will probably want to pass along your location as an attribute from the vertex shader to the fragment shader, and then calculate the light vector in your fragment shader from the interpolated position. (This was a source of much frustration when I was writing the solution key to this assignment.) &nbsp;<b>If your headlights seem to detach from your car and move in weird ways, this is the likely culprit.</b><br>  <br>  GLSL allows for uniform structs, uniform arrays, and even uniform arrays of structs. However, arrays of structs have a reputation for being clumsy to code with, so you might want to pick either arrays (4 lights, so 4 light positions, 4 light colors, 4 light directions, 4 light cutoff angles), or structs (cluster together a position, color, direction and cutoff angle, and then have 4 separate light struct uniforms), but not both (an array of 4 light parameter structs). If you do an array, notice that you either have to send all of the data over as a single array (so an array of 4 vec4s would be a 16 element array of floats), or fetch references to each array item (but this is easy enough with looping).<br>  <br>  Don't forget to get your lighting parameters into eye space before you send them to the shaders. The modelview matrix you have in the shaders applies to the object being rendered, not the light.<br>  <br>  Implementing light attenuation based on distance is optional, but could help your lighting to look more realistic. If you do spotlight attenuation based on angle, please leave the headlights alone so the spot cutoff is clearly visible. The red and blue lights can be attenuated based on angle.<br>  <br>  If you have any confusion about how to interpret one of the program requirements, contact the professor rather than taking a guess at how to do the project.<br>  <br>  <br>  The suggested order that you tackle this assignment:<br>  Start with a fully functioning solution to Assignment 3.<br>  Re-model all objects with normals and surface reflectance properties<br>  Implement ambient light<br>  Implement one headlight<br>  Implement your second headlight<br>  Implement cop car lights<br>  Add extra features if time allows<br>  <br>  You have two weeks plus Spring Break for this assignment, but you will need that time to get it done. Do not leave it until the night before it is due.<br>  <div><b>In particular, be aware that implementing spot lights tends to take people longer than they think it will to code correctly, and getting multiple lights to work simultaneously also takes people longer to get right than they think it will.</b> &nbsp;Both of these things can be accomplished with surprisingly little extra code, but for whatever reason, many people struggle to get it right the first time they implement them.</div> <div> <ul> <li>Spot lights only require two additional uniforms (a light direction vector and a cutoff angle) and an extra if statement in your shader ("is this point inside of the lighted area?"). &nbsp;The Angel book gives the gist of what needs to be done on page 264, but feel free to email me for additional help or&nbsp;explanation&nbsp;if needed. &nbsp;<b>Again, note that OpenGL 1 spotlight code examples will be mostly useless to you.</b></li> <li>If you are using arrays to pass your lighting parameters in, note that you can have a loop in GLSL that simply performs the lighting calculations once per light, and keeps a running sum of the results. &nbsp;Copying, pasting and hard coding lighting calculations for multiple lights within your shader is a waste of code, and is not very flexible if you want to add even more lights.</li> <li>If you are using structs to pass in your lighting parameters, I would still recommend finding a way to use a for loop in your shader to perform the lighting calculation so that you do not simply repeat the relevant code 4 times in a row. &nbsp;Remember that repeated code is setting you up for a debugging and&nbsp;maintenance&nbsp;nightmare.</li> </ul> </div></div>
</div>

 <div id="_1227182_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1237102_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1237102_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1237102_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Assignment 5</span></a>
  </h3>
  
 </div>


<div class="details">
      <table class="key-valueTable">
<tbody><tr>
<th scope="row">Attached Files:</th>
<td><ul class="attachments clearfix"><li><a href="https://blackboard.stthomas.edu/bbcswebdav/pid-1237102-dt-content-rid-3136238_2/xid-3136238_2" target="_blank"><img src="cal_year_event.gif" alt="File">&nbsp;earthcloudmap.png</a> (1.057 MB) </li></ul></td>
</tr>
</tbody></table>

      <div class="vtbegenerated"><b>Hello World</b>&nbsp;&nbsp;  <div><b>Goals:</b><br>  <br>   This assignment will demonstrate texture mapping of all shapes and sizes<br>  <br>  <b>Submission guidelines:</b></div> <div>If you're using the recommended textures, please do not submit texture files with your code. &nbsp;I already have them, and it will save us both a lot of bandwidth if you don't submit hundreds of MB. &nbsp;If you're using a texture other than the recommended ones, then submit your texture with your code.</div> <div>On this assignment, it's crucial that you comment your code well. &nbsp;Some of you have been good about that, and I appreciate it. &nbsp;Others of you have not really bothered organizing or documenting your code. &nbsp;That's hurting your ability to work with your own code, and is also starting to make it almost impossible for me to understand your code in order to grade it. &nbsp;If you hand in sloppy code, expect to lose the easiest 10 points of the assignment. &nbsp;Claims of "self documenting code" will be met with&nbsp;skepticism.</div> <div>You'll also want some form of source control, even if it's just emailing yourself a copy of your code every few days. &nbsp;This assignment tends to be pretty susceptible to accidentally breaking beyond repair and need to be rolled back to a previous state that was working. &nbsp;<br>  <br>   <b>Texture acquisition:</b><br>  <br>   Lots of different Earth texture maps can be found here: <a onclick="this.href=&#39;/webapps/portal/frameset.jsp?tabGroup=courses&amp;url=%2Fwebapps%2Fblackboard%2Fcontent%2FcontentWrapper.jsp%3Fcontent_id%3D_1237102_1%26displayName%3DLinked%2BFile%26course_id%3D_77664_1%26navItem%3Dcontent%26attachment%3Dtrue%26href%3Dhttp%253A%252F%252Fwww.celestiamotherlode.net%252Fcatalog%252Fearth.php&#39;;" href="http://www.celestiamotherlode.net/catalog/earth.php">http://www.celestiamotherlode.net/catalog/earth.php</a>. I would recommend the "Real color Earth surface" png by Shadmith for your basic texture. For normal maps, specular maps, etc the 2k/4k/8k pngs by John van Vliet will work well. Many of the other files will be fairly useless to us, so please don't abuse that web site's bandwidth by grabbing 100 MB files that won't be any good for our purposes. Basically, anything labeled VT, DDS, or "Level _" won't be useful to us, so <u>don't download them.</u><br>  <br>   I'm afraid I don't have a good high resolution cloudmap, but a 1k file should be attached to this assignment below (you may have to click on the assignment title if you're viewing this on the assignment list page).<br>  <br>   You'll probably want to start with the low res textures at first (to cut down on the time it takes to start your program), and then swap in the high res textures once everything is working. This should require simply copying different files into the right directory.<br>  <br>   <b>Sphere Mapping</b><br>  <br>   Modify the sphere from our lighting exercise to include texture coordinates. <b>Do not use Angel's sphere drawing code</b>. Your sphere method should produce a polygonal sphere with appropriate normal vectors and texture coordinates for each vertex.<br>  <br>   Your basic assignment is to render your sphere with the surface texture mapped and good lighting.<br>  <br>   Use mipmapping and appropriate filters to ensure aesthetic rendering.&nbsp;<br>  <br>   <b>Animation</b><br>  <br>   Have the Earth rotate slowly. If you have a cloud layer, have the clouds rotating a little bit slower than the Earth. &nbsp;The Earth should be going through a day/night cycle as it rotates where half of the globe is in daytime and half is in night time at any given moment. &nbsp;Remember that the east coast has sunrise before the west coast.<br>  <br>   <b>Additional options:</b></div> <div><u style="font-weight: bold;">To get full credit for any of these options, you must provide a rendering mode (activated via keypress) that shows just the one feature at a time, plus one shader that shows all effects together at once.</u>&nbsp;So, you could have a shader that just does your specular map, a shader that just does your color map, a shader that just does normal mapping, etc, and a shader that does all of your features together in one image. &nbsp;This will allow me to grade your project more easily since it will be clear whether you implemented that one feature correctly if it is in isolation. &nbsp;<br>    <ul> <li>Use a specular map to determine the specular exponent in your lighting calculation. You'll know it's working right if your water is shiny and your land is not. &nbsp;Pay close attention to the format of any specular map you use. &nbsp;Some of them aren't documented well. &nbsp;If you're using the recommended map, the first three color values are the attenuation for your RGB specular coefficient, and the 4th color coordinate is your attenuation for the specular exponent. &nbsp;Ask the professor for help if you're not sure what's going on there.</li> <li>Use a night map of the Earth on the night side of your sphere. The side facing the light source should show the regular color map, and the side facing away from the light should show city lights instead of just being dark. Don't show city lights on the day side. &nbsp;Have a smooth transition between the day and night regions as the globe rotates rather than a sharp line where you switch between the two.</li> <li>Use a normal map to do your lighting calculation. This involves more than just using the normal map values in place of your sphere normal vectors. Either wait for us to cover this in class, or start reading up on this yourself. (See warnings below)</li> <li>Use a cloud map to add a cloud layer with translucency. You will want to render a second sphere with a slightly larger radius to get the clouds "above" the land. You'll also probably want a separate shader program for the clouds.</li> </ul> Warnings<br>    <ul> <li>Add one feature at a time and make sure it's very clearly working correctly before you move on. Each of the 5 major texturing operations should have very clear results. The normal mapping will be the most subtle one, but if you turn off the color mapping you should still see very obvious mountain ranges and such. They should look like almost 3D mountains, not just oddly colored areas.</li> <li style="list-style-type: none; list-style-position: initial; list-style-image: initial;"> <ul> <li>If you ever have doubts that you're seeing the correct result, ask me to take a look at what you have</li> </ul> </li> <li>Watch out for your alpha value! Several of your calculations stand a good chance of making your fragment alpha value not 1. If the layer you're dealing with should not be transparent, this will cause problems. &nbsp;The easiest way to combat this is to manually set your alpha value back to 1 right at the end of your fragment shader if you are rendering an object that should be opaque. &nbsp;</li> <li>Make sure you check how your different maps are formatted. In your specular map, what value means shiny and what value means dull? In your normal map, what value indicates a flat area (i.e. not preturbed)? Make sure you use the mapped data appropriately</li> <li>Although you're going to add one feature at a time, make a checklist (no seriously, write one out) of places in your code where you'll need to add one more texture reference, or bind one more texture, etc. You'll have several places in your code to modify each time you're adding another texture, and it can be very easy (and frustrating) to miss one.</li> <li>If you attempt the normal mapping part, at a certain point you're very likely to notice that your day/night border is more of an S-curve than a straight north/south line. &nbsp;This is part of trying to apply a consistent tangent space to the surface of a sphere. &nbsp;There are ways to minimize this, but it's not exactly easy (hence the extra credit for getting it right). &nbsp;You will probably never eliminate it completely, but you should be able to get it to the point where you don't really notice it. &nbsp;Your best bet is to identify where the most poorly behaved areas of your sphere are, and arrange to have those spot occur in a place that's not very&nbsp;noticeable&nbsp;(like the north pole). &nbsp;You'll also want to carefully control what directions the sun shines from (note that the sun never shines directly onto the north pole for instance).</li> </ul> <br>  <br>   Grading Criteria:<br>  <br>   10 pts: Correct loading of the image files<br>   15 pts: Correct modeling of sphere, including vertex location, normal vectors and texture coordinates<br>   25 pts: Correct rendering of Earth including texture mapping, mipmapping, and basic lighting<br>   10 pts: Correct use of the specular map to control shininess<br>   20 pts: Correct use of normal mapping<br>   10 pts: Correct rendering of the night side of the earth<br>   15 pts: Correct rendering of a cloud layer<br>   5 pts: Correct implementation of rotation animation<br>   10 pts: Good design and coding style<br>  <br>   Additional Notes:<br>  <br>   Note that this adds up to 120 points out of 100. If you successfully complete all of the requirements, that's 20 points of extra credit. However, attempting all of the requirements and succeeding at none of them will not earn you very many points. Do the requirements one at a time, and make sure you have it entirely correct before you move on to the next one. You may want to save a copy of your project before you start each new feature, just in case you need to roll back to a previously working state. &nbsp;If you have source control available, that would be a very good idea for this project.<br>  <br>   If you have any confusion about how to interpret one of the program requirements, contact the professor rather than taking a guess at how to do the project.<br>  <br>   The suggested order that you tackle this assignment:<br>    <ul> <li>Draw a sphere with basic lighting (should already be done from the in class exercise</li> <li>Load in the basic color texture and try mapping it to a flat rectangle instead of the sphere to make sure the texture loading functions are working</li> <li>Remodel the sphere so it also has texture coordinates</li> <li>Now put them together (lit sphere with texture mapping)</li> <li>Add the automatic rotation animation</li> <li>Add the specular map</li> <li>Add the night time map</li> <li>Add the cloud layer</li> <li>Add normal mapping (which will involve gutting a good chunk of your previous fragment shader, so save a copy first!)</li> </ul> Complete this assignment as early as possible so that you have enough time to focus on your final project.<br>  <br>   <span style="font-weight: bold;">If you want a happy grader, make each feature a separate shader, plus one shader with all of them put together, and provide key controls to switch between features. &nbsp;Comment your code heavily so you can be sure I notice that you correctly did things that are worth points.</span></div></div>
</div>

 <div id="_1237102_1previewModule" class="moduleSample">
 </div>
</li>




<li id="contentListItem:_1242824_1" class="clearfix read">

<img alt="" src="assignment_on.gif" class="item_icon">

<div class="item clearfix" id="_1242824_1">

 <h3>
  <span class="reorder editmode hideme"><img src="generic_updown.gif" alt=""></span>


      <a href="https://blackboard.stthomas.edu/webapps/blackboard/execute/uploadAssignment?content_id=_1242824_1&course_id=_77664_1&assign_group_id=&mode=view"><span style="color:#000000;">Final Project</span></a>
  </h3>
  
 </div>


<div class="details">
      <div class="vtbegenerated">You have all negotiated your final project topic individually, but below are some criteria so you know how you will be evaluated. <div><b>Code: 60pts</b></div> <div>A level: All objectives accomplished, code is well organized and commented, no significant errors</div> <div>B level: Minor objective not accomplished, or code is poorly organized or commented, or code contains minor errors</div> <div>C level: Moderate objective not accomplished, or multiple minor objectives not accomplished. &nbsp;Code contains significant issues, but is still functional</div> <div>Unacceptable: Major objective not accomplished, code contains major flaws.</div> <div><b>Write-up: 30pts</b></div> <div>If you have negotiated a non-coding topic, this portion would be worth 90 points.</div> <div>A level: Well written and formatted. Proper attributions included. All objectives discussed, as well as a description of how your project went. &nbsp;Particularly interesting discoveries discussed.</div> <div>B level: All objectives discussed, as well as a description of how your project went, particularly interesting discoveries discussed. &nbsp;However, paper has missing attributions or significant&nbsp;grammatical&nbsp;or formatting issues.</div> <div>C level: All objectives discussed, but description is lacking in detail. &nbsp;No discussion of personal&nbsp;discoveries&nbsp;and process.</div> <div>Unacceptable: Major objectives not discussed.</div> <div><b>Demo: 10pts</b></div> <div>In class on May 8th, you should have a demo to show off your project to your fellow students. &nbsp;</div> <div>Acceptable: A looping slideshow giving the background and results of your project with appropriate pictures, or an automated demo of your program with a print-out (or second display) explaining what your program is doing. &nbsp;Your demo should not need to be monitored since you should be wandering around the room looking at other people's demos.</div> <div>Unacceptable: No demo</div></div>
</div>

 <div id="_1242824_1previewModule" class="moduleSample">
 </div>
</li>

</ul>




<!-- Begin bottom list action bar. -->
<!-- End bottom list action bar. -->


<!-- begin edit paging (bottom) -->
  <!-- end edit paging (bottom) -->

   </div>
   
     </div> 
  <div class="bottomRound">
    <b class="inner"></b><b class="middle"></b><b class="outer"></b>
  </div>
   </div> 
   </div>
   </div>  
</div>
  <script type="text/javascript">page.bundle.addKey('breadcrumbs.expand','Click to expand the breadcrumbs');page.bundle.addKey('expandCollapse.expand.section.param','Expand {0}');page.bundle.addKey('dynamictree.expand.folder','Expand {0} tree folder');page.bundle.addKey('entryPointChangeConfirmStr','The entry point will changed to the next available Content');page.bundle.addKey('yt.paused','Paused:');page.bundle.addKey('expandCollapse.collapse.section.nocolon','Collapse');page.bundle.addKey('yt.buffering','Buffering:');page.bundle.addKey('dynamictree.collapse.folder','Collapse {0} tree folder');page.bundle.addKey('lightbox.overlay','Lightbox will have a overlay.');page.bundle.addKey('confirmQuickEnrollStr','You will be given the role: {0}. Proceed?');page.bundle.addKey('inlineconfirmation.refresh','Refresh');page.bundle.addKey('moreOptionsStr','Click to see options');page.bundle.addKey('yt.cued','Cued:');page.bundle.addKey('hidden.link.close.form','End of form. Click to return to associated item.');page.bundle.addKey('dragdrop.accessible.empty','No items available to reposition.');page.bundle.addKey('emptyStr','This link has no content');page.bundle.addKey('yt.stopped','Stopped:');page.bundle.addKey('hidden.link.close.menu','End of menu. Click to return to associated item.');page.bundle.addKey('dragdrop.accessible.error.chooseOption','Select an item first.');page.bundle.addKey('hiddenStr','This link is hidden from students');page.bundle.addKey('yt.mute','Mute');page.bundle.addKey('coursemenu.show','Show Course Menu');page.bundle.addKey('expandCollapse.collapse.section.param','Collapse {0}');page.bundle.addKey('dragdrop.accessible.complete','Items have been reordered.');page.bundle.addKey('expandCollapse.expand.section.nocolon','Expand');page.bundle.addKey('lightbox.loading','Loading...');page.bundle.addKey('frameset.contentframe.title','Content');page.bundle.addKey('inlineconfirmation.close','Close');page.bundle.addKey('enterSearchKeyStr','Enter Search Criteria.');page.bundle.addKey('dynamictree.expand','Expand');page.bundle.addKey('yt.ended','Ended:');page.bundle.addKey('subheaderColonStr','Subheader: {0}');page.bundle.addKey('closeStr','Close');page.bundle.addKey('yt.play','Play');page.bundle.addKey('yt.playing','Playing:');page.bundle.addKey('yt.unmute','Unmute');page.bundle.addKey('dynamictree.collapse','Collapse');page.bundle.addKey('contextmenu.frame.title','Menu frame');page.bundle.addKey('dragdrop.accessible.complete.nochange','No ordering changes made.');page.bundle.addKey('yt.pause','Pause');page.bundle.addKey('coursemenu.hide','Hide Course Menu');</script>
  <script language="JavaScript">
    function markReviewed(itemId)
    {
      document.contentForm.rstatus.value = "review";
      document.contentForm.reviewed_content_id.value = itemId;
      document.contentForm.submit();
    }

    function markUnreviewed(itemId)
    {
      if ( confirm("This will mark the item as unreviewed. Continue?") )
      {
        document.contentForm.rstatus.value = "unreview";
        document.contentForm.reviewed_content_id.value = itemId;
        document.contentForm.submit();
      }
    }
    </script>
  
  <script type="text/javascript">
   var course_id = "_77664_1";
   var confirmDeleteMenuItemMsg = "Are you sure you want to delete this item?";
   var confirmQuickUnenrollMsg = "Any user data created while quick enrolled in this course will be deleted. Proceed?";
   var confirmQuickEnrollMsg = "You will be given the role: Instructor. Proceed?";
   var inNewWindow = false;
   var theCourseMenu;
 </script>
 
 
   <script type="text/javascript">
   FastInit.addOnLoad( function()
   {
            if ( window.DWREngine )
       {
        try {DWREngine.beginBatch();} catch(ignore) {}
       } 
                page.decoratePageBanner();
                                                             new genericList.CheckboxRadioController("content_listContainer");
                                                             new page.PageHelpToggler(true, 'Help is On: Click to hide page help.', 'Help is Off: Click to show page help.', false );
                                                             new page.PageMenuToggler(true,'courseMenuToggle');
                                                             new page.PaletteController('courseMenuPalette', 'courseMenu_link', false, false);
                                                             theCourseMenu = new courseMenu.CourseMenu('/webapps/blackboard/execute/doCourseMenuAction', '/webapps/blackboard/execute/getCourseMenuContextMenu');
                                                             if (typeof(initEditors) == 'function') { initEditors(); }; 
                                                                  if ( window.DWREngine )
       {
         try {DWREngine.endBatch();} catch(ignore) {}
       }
                          BrowserSpecific.registerListeners();
               });
   </script>
       

</body></html>